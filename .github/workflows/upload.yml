name: Download ZIP and Music Tracks

on:
  workflow_dispatch:
    inputs:
      zip_url:
        description: 'ダウンロードするZIPファイルのURL'
        required: true
        type: string
      zip_filename:
        description: 'ダウンロードするZIPファイルの名前'
        required: true
        type: string
      url:
        description: 'ダウンロードする音楽URLをカンマ区切りで入力'
        required: true
        type: string
      scrape_internal_links:
        description: '内部リンクをスクレイピングしますか？'
        required: true
        type: boolean
        default: false
      source_type:
        description: 'ダウンロード元の種類'
        required: true
        type: choice
        options:
          - auto_detect
          - soundcloud
          - bandcamp
          - archive
          - direct_link
        default: auto_detect
      zip_filename_music:
        description: '作成する音楽ZIPファイルの名前'
        required: true
        type: string

jobs:
  download_zip:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4

      - name: Gitの設定
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: ダウンロードディレクトリを作成
        run: |
          mkdir -p downloads

      # ZIPファイルのダウンロード
      - name: ZIPファイルをダウンロード
        run: |
          curl -L "${{ github.event.inputs.zip_url }}" -o "downloads/${{ github.event.inputs.zip_filename }}.zip"

      - name: ダウンロードされたZIPファイルの確認
        run: |
          ls -la downloads/

      # ZIPファイルをリポジトリにアップロード
      - name: リポジトリにZIPファイルをアップロード
        run: |
          git add "downloads/${{ github.event.inputs.zip_filename }}.zip"
          git commit -m "Add downloaded ZIP"
          git push origin HEAD:main

  download_and_zip_music:
    runs-on: ubuntu-latest
    needs: download_zip
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4

      - name: Gitの設定
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: ダウンロードディレクトリを作成
        run: |
          mkdir -p downloads

      # 音楽ファイルのダウンロード
      - name: Pythonをセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Pythonの依存関係をインストール
        run: |
          python -m pip install --upgrade pip
          pip install \
            yt-dlp \
            setuptools \
            wheel

      - name: 必要なパッケージをインストール
        run: |
          pip install yt-dlp requests beautifulsoup4
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: 音楽をダウンロード
        env:
          INPUT_URL: ${{ github.event.inputs.url }}
          INPUT_SCRAPE_LINKS: ${{ github.event.inputs.scrape_internal_links }}
          INPUT_SOURCE_TYPE: ${{ github.event.inputs.source_type }}
        run: |
          # カンマ区切りのURLを分割して配列に格納
          IFS=',' read -r -a URL_ARRAY <<< "$INPUT_URL"
          for url in "${URL_ARRAY[@]}"; do
            python downloader.py "$url" "$INPUT_SCRAPE_LINKS" "$INPUT_SOURCE_TYPE"
          done

      - name: ダウンロードされたファイルの確認
        run: |
          echo "ダウンロードされたファイル:"
          ls -la downloads/

      - name: ダウンロードファイルを指定のフォルダにまとめる
        run: |
          FOLDER_NAME="${{ github.event.inputs.zip_filename_music }}"
          mkdir -p "downloads/$FOLDER_NAME"
          find downloads -type f \( -name "*.mp3" -o -name "*.wav" -o -name "*.m4a" \) -exec mv {} "downloads/$FOLDER_NAME/" \;

      - name: 音楽ZIPファイルを作成
        run: |
          FOLDER_NAME="${{ github.event.inputs.zip_filename_music }}"
          ZIP_NAME="${FOLDER_NAME}.zip"
          cd downloads && zip -r "$ZIP_NAME" "$FOLDER_NAME"
          mv "downloads/$ZIP_NAME" .

      # 音楽ZIPファイルをリポジトリにアップロード
      - name: リポジトリに音楽ZIPファイルをアップロード
        run: |
          git add "${{ github.event.inputs.zip_filename_music }}.zip"
          git commit -m "Add music ZIP"
          git push origin HEAD:main

